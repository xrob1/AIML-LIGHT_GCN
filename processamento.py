from src import *
from src.loader.paths import *
from src.utils.resutls_tab import *
from utils import *

REDUCERS    =['NN','UMAP','KPCA','AUTOE','TSNE','BASE']
FACTORS     =[512,256,128,64,32,16,8,4,2]
EXPLORATION = False

def fai(DATASET,ALGORITMO,FACTORS,REDUCERS,NOME_CSV,TIPO=TEST,EXPLORATION=False):
    #MODELLO PIU GRANDE CON RISPETIVE RIDUZIONI (ALGS)
    config = build_config_file(DATASET, ALGORITMO, FACTORS=FACTORS[0], REDUCERS=REDUCERS, RED_FACTORS=FACTORS[1:],EXPLORATION=EXPLORATION)
    run_on_config(config)
    # MODELLI RIDOTTI  
    for F in FACTORS[1:]:
        config = build_config_file(DATASET, ALGORITMO, FACTORS=F,EXPLORATION=EXPLORATION)
        run_on_config(config)
    
    # ESTRAZIONE E PROCESING RISULTATI CON CSV
    extract_and_process_results(DATASET,ALGORITMO,TIPO,AGAINST_BEST=False)
    # DO CSV
    write_csv(DATASET,OUT_NAME=NOME_CSV)

def fai_risultati(DATASET,ALGORITMO,TIPO,NOME_CSV,AGAINST_BEST=False,AT=512):   
    extract_and_process_results(DATASET,ALGORITMO,AGAINST_BEST,TIPO,AT=AT)
    write_csv(DATASET,OUT_NAME=NOME_CSV)  

def fai_riduzione_e_res(DATASET,ALGORITMO,FACTORS,REDUCERS,NOME_CSV,TIPO=TEST,EXPLORATION=False):
    config = build_config_file(DATASET, ALGORITMO, FACTORS=FACTORS[0], REDUCERS=REDUCERS, RED_FACTORS=FACTORS[1:],EXPLORATION=EXPLORATION)
    run_on_config(config)
    extract_and_process_results(DATASET,ALGORITMO,TIPO)
    write_csv(DATASET,OUT_NAME=NOME_CSV)




FACTORS=[256,128,64,32,16,8,4,2]
#fai_riduzione_e_res(FACEBOOK,BPRMF,FACTORS,REDUCERS,'BPRMF_FACEBOOK_Red256')#BPRMF FACEBOOK 256
#fai_risultati(FACEBOOK,BPRMF,TEST,'BPRMF_FACEBOOK_Red256')
#fai_riduzione_e_res(FACEBOOK,BPRMF,FACTORS,REDUCERS,'BPRMF_YAHOO_Red256')#BPRMF YAHOO 256

fai_risultati(FACEBOOK,BPRMF,TEST,'FACEBUK_BPRMF_AB',True,AT=256)
fai_risultati(YAHOO,BPRMF,TEST,'YAHOO_BPRMF_AB',True,AT=256)